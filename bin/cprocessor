from kafka import KafkaConsumer, TopicPartition
from kafka.errors import KafkaError
import sys

# Configuration Kafka (à adapter à ton environnement)
BOOTSTRAP_SERVERS = ['localhost:9092']  # remplace par ton bootstrap
TOPIC_NAME = 'ton_topic'  # remplace par ton topic

def main():
    try:
        consumer = KafkaConsumer(
            bootstrap_servers=BOOTSTRAP_SERVERS,
            enable_auto_commit=False
        )

        # Récupération des partitions du topic
        partitions = consumer.partitions_for_topic(TOPIC_NAME)
        if partitions is None:
            print(f"Le topic '{TOPIC_NAME}' n'existe pas ou n'est pas accessible.")
            return

        for partition in partitions:
            tp = TopicPartition(TOPIC_NAME, partition)
            # Attribution des partitions au consumer (obligatoire pour accéder aux offsets)
            consumer.assign([tp])
            # Aller à la fin du topic pour récupérer le dernier offset
            consumer.seek_to_end(tp)
            latest_offset = consumer.position(tp)

            if latest_offset == 0:
                print(f"Partition {partition}: aucun message")
                continue

            # Lire le dernier message pour en extraire le timestamp
            consumer.seek(tp, latest_offset - 1)
            msg = next(consumer)

            print(f"Partition {partition} - Dernier offset: {latest_offset - 1} - Timestamp: {msg.timestamp}")

    except KafkaError as e:
        print(f"Erreur Kafka: {e}")
    except Exception as e:
        print(f"Erreur: {e}")
    finally:
        consumer.close()

if __name__ == '__main__':
    main()
