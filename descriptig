Lorsque le producteur envoie des messages en mode transactionnel à Kafka, il inclut plusieurs informations dans les métadonnées du message pour lier ce message à la transaction. Les informations clés sont :

transactionalId : L’ID de la transaction. C’est ce qui lie les messages dans une même transaction.

producerId : L'identifiant du producteur.

producerEpoch : Version du producteur, utilisé pour garantir l'unicité de l'ID du producteur sur plusieurs sessions.

Ces informations sont intégrées dans les headers du message Kafka, et c'est ce que Kafka utilise pour identifier les messages qui font partie d'une même transaction.

2. Le rôle du TransactionMarker
Le TransactionMarker est un enregistrement spécial qui contient des informations sur la transaction, telles que l’ID de la transaction (transactionalId), le producerId et le type du marker (soit COMMIT soit ABORT).

Lorsque Kafka consomme des messages, il peut utiliser ces informations pour savoir si un message appartient à une transaction, et vérifier l'état de cette transaction (commité ou avorté). Ce TransactionMarker indique à Kafka s’il doit livrer ou ignorer les messages précédemment produits dans cette transaction.

3. Comment le consumer sait-il qu’un message appartient à une transaction ?
Voici la logique en détail :

Le producteur envoie des messages transactionnels avec les métadonnées appropriées (transactionalId, producerId, producerEpoch).

Kafka stocke ces messages dans la partition. Chaque message a l'offset X dans la partition.

Lorsque le producteur termine sa transaction :

Kafka enregistre un TransactionMarker pour cette transaction (commit ou abort) dans la partition.

Ce TransactionMarker contient l'ID de la transaction, le producerId, et le type de l’opération (commit ou abort).

Quand un consumer en read_committed lit un message à l'offset X, Kafka fait :

Il vérifie si le message fait partie d'une transaction en utilisant les métadonnées (transactionalId, producerId, etc.).

Kafka lit le log des partitions pour retrouver un TransactionMarker associé à cette transaction et déterminer l’état de la transaction.

Si la transaction est commité, le consumer recevra le message à l'offset X.

Si la transaction est abortée, le message à l'offset X est ignoré.
